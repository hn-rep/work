https://tech.groove-x.com/entry/noetic-on-jammy

apt update
curl -s https://packagecloud.io/install/repositories/groove-x/ros/script.deb.sh | sudo bash
sudo apt install -y ros-noetic-desktop-full

echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
source ~/.bashrc

sudo apt install python3-roslaunch
roscore

pip install pymycobot --user

$ cd ~/catkin_ws/src
$ git clone --depth 1 https://github.com/elephantrobotics/mycobot_ros.git
$ cd ~/catkin_ws
$ catkin_make
$ source ~/catkin_ws/devel/setup.bash
$ sudo echo 'source ~/catkin_ws/devel/setup.bash' >> ~/.bashrc

〇22.04
? ステップ1：鍵をダウンロードして配置

sudo mkdir -p /usr/share/keyrings
curl -fsSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | \
  gpg --dearmor | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg > /dev/null

?? ※ 以前の .asc 鍵は非推奨になり、.key + gpg --dearmor に変更されました。
? ステップ2：リポジトリ設定（もう一度やり直し）

echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
  http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | \
  sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

? ステップ3：再度パッケージリストを更新

sudo apt update

このとき、署名エラーが消えていることを確認してください。
? ステップ4：ROS 2 Humble をインストール

sudo apt install ros-humble-desktop-full

echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
source ~/.bashrc


# 話者ノード（Talker）を起動
ros2 run demo_nodes_cpp talker

# 別ターミナルでリスナーを起動
ros2 run demo_nodes_cpp listener

$ cd ~/colcon_ws/src
$ git clone --depth 1 https://github.com/elephantrobotics/mycobot_ros2.git
$ cd ~/colcon_ws
$ sudo apt install python3-colcon-common-extensions
colcon build


git clone https://github.com/elephantrobotics/mycobot_ros2
cd mycobot_ros2/
git checkout humble


git clone https://github.com/elephantrobotics/myCobotROS.git
cd myCobotROS/
python3 scripts/test.py

sudo apt install python3-rosdep
sudo rosdep init
rosdep update
sudo rosdep init
rosdep update
sudo rosdep init
rosdep install --from-paths src --ignore-src -r -y
catkin config --extend /opt/ros/noetic
catkin build
source /opt/ros/noetic/setup.bash
catkin config --extend /opt/ros/noetic
sudo apt install python3-catkin-tools
catkin --version
catkin_make config --extend /opt/ros/noetic
catkin_make build

sudo apt install catkin
sudo apt install python3-colcon-common-extensions

ros2 run demo_nodes_cpp listener

catkin_make build
sudo apt install catkin
source /opt/ros/humble/setup.bash
catkin_make build
catkin_make
sudo apt install catkin
source /opt/ros/humble/setup.bash
ls
rm -rf build devel/
catkin_make build
ls
catkin_make
sudo apt install catkin
sudo apt update
sudo apt install python3-catkin-pkg python3-empy python3-nose python3-setuptools libgtest-dev
sudo apt install catkin
sudo apt install ros-noetic-catkin
which catkin_make
echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
source ~/.bashrc

python3 scripts/simple_gui.py
python3 scripts/follow_display.py
python3 scripts/slider_control.py


ros2 run turtlesim turtlesim_node
ros2 run turtlesim turtle_teleop_key
ros2 run demo_nodes_cpp talker


ros2 run demo_nodes_cpp talker
sudo apt install python3-argcomplete -y
sudo apt install ros-foxy-xacro
sudo apt install ros-humble-xacro
sudo apt-get install python3-colcon-common-extensions
sudo apt install ros-humble-joint-state-publisher-gui
ros2
sudo apt-get update
sudo apt-get install ros-humble-moveit
sudo apt install python-pip
pip install pymycobot --upgrade
sudo apt install python3-pip
pip install pymycobot --upgrade
ros2 run turtlesim turtlesim_node
ros2 run turtlesim turtle_teleop_key
history
ros2 run demo_nodes_cpp talker

